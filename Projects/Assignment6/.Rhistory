snps <- unname(missing_table)
snps
per
missing_table <- data.frame(table(nas_col))
missing_table
names(missing_table) <- c('percentage', 'snps')
kable(data, digits=3)
kable(missing_table, digits=3)
sum(per.na.snps > 1)
sum(missing_table > 1)
sum(missing_table$percentage > 1)
sum(missing_table$percentage > 0.01)
sum(missing_table$percentage)
(missing_table$percentage)
(missing_table$percentage> 0.01)
(missing_table$percentage > 0.01)
missing_table$percentage > 0.01
missing_table$percentage
missing_table$percentage > 0.01
(missing_table$percentage > 0.01)
(missing_table$percentage < 0.01)
percentage
missing_table$percentage
(missing_table$percentage > 0.01)
(nas_col > 0.01)
sum(nas_col > 0.01)
maf <- function(x){
x <- genotype(x,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE) # select the minor
af1[af1==1] <- 0 # if there are only one allele
return(af1)
}
maf.per.snp <- apply(X,2,maf)
library(genetics)
maf <- function(x){
x <- genotype(x,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE) # select the minor
af1[af1==1] <- 0 # if there are only one allele
return(af1)
}
maf.per.snp <- apply(X,2,maf)
maf.per.snp <- apply(X,2,maf)
maf <- function(x){
x <- genotype(x,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE) # select the minor
af1[af1==1] <- 0 # if there are only one allele
return(af1)
}
X <- t(X.Geno)
maf.per.snp <- apply(X,2,maf)
x <- genotype(X,sep="")
out <- summary(x)
out
af1 <- min(out$allele.freq[,2],na.rm=TRUE)
af1[af1==1] <- 0
af1
maf <- function(x){
x <- genotype(x,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE)
af1[af1==1] <- 0
return(af1)
}
maf.per.snp <- apply(X,2,maf)
x <- genotype(X,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE)
af1[af1==1] <- 0
af1
X
maf.per.snp <- apply(X.Geno,2,maf)
maf.per.snp <- apply(X,2,maf)
get.maf <- function(snp){
snp <- snp[!is.na(snp)]
allele.1 <- (2 * sum(snp == 0) + sum(snp == 1))/(2*length(snp))
allele.2 <- (sum(snp == 1) + 2 * sum(snp == 2))/(2*length(snp))
return(min(allele.1, allele.2))
}
maf.per.snp <- apply(X,2,maf)
snps.maf <- apply(snps, MARGIN = 2, get.maf)
snps <- t(X.Geno)
maf <- function(x){
x <- genotype(x,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE) # select the minor
af1[af1==1] <- 0 # if there are only one allele
return(af1)
}
maf.per.snp <- apply(X,2,maf)
maf.per.snp <- apply(snps,2,maf)
maf.per.snp <- apply(snps[,1:5],2,maf)
maf.per.snp <- apply(X[,1],2,maf)
maf.per.snp <- apply(X[,1:3],2,maf)
maf.per.snp <- apply(X,2,maf)
x <- genotype(X,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE) # select the minor
af1[af1==1] <- 0 # if there are only one allele
x <- genotype(X[,1],sep="")
x <- genotype(X[,3],sep="")
x <- genotype(X[,15],sep="")
x <- genotype(X.Geno,sep="")
out <- summary(x)
af1 <- min(out$allele.freq[,2],na.rm=TRUE) # select the minor
af1[af1==1] <- 0 # if there are only one allele
af1
maf.per.snp <- apply(X.Geno,2,maf)
maf <- function(x) {
y0 <-  sum(x ==0,na.rm=TRUE)
y1 <-  sum(x ==1,na.rm=TRUE)
y2 <-  sum(x ==2,na.rm=TRUE)
af1 <-(100*(min(y0,y1,y2))/76)
af1[af1==1] <- 0 # monomorfics
return (af1)
}
maf.per.snp <- apply(X.Geno,2,maf)
maf.per.snp
maf.per.snp <- apply(X,2,maf)
maf.per.snp
hist(maf_snp)
maf_snp <- apply(X,2,maf)
hist(maf_snp)
maf_snp
plot(nas_col)
hist(maf_snp)
maf_snp <- apply(X,1,maf)
hist(maf_snp)
maf_snp <- apply(X,2,maf)
hist(maf_snp)
X
X[1:5,1:5]
x <- genotype(X[,1],sep="")
x <- genotype(X[,2],sep="")
x <- genotype(X[,30],sep="")
x <- genotype(X,sep="")
x
x <- genotype(X[,5],sep="")
x
y0 = sum(X.Geno[2,] ==0,na.rm=TRUE)
y1 = sum(X.Geno[2,] ==1,na.rm=TRUE)
y2 = sum(X.Geno[2,] ==2,na.rm=TRUE)
min(y0,y1,y2)
maf <- function(x) {
y0 <-  sum(x ==0,na.rm=TRUE)
y1 <-  sum(x ==1,na.rm=TRUE)
y2 <-  sum(x ==2,na.rm=TRUE)
af1 <-(100*(min(y0,y1,y2))/76)
af1[af1==1] <- 0 # monomorfics
return (af1)
}
maf.per.snp <- apply(X.Geno,1,maf)
maf.per.snp
maf.per.snp <- apply(X,2,maf)
maf_snp  <- apply(X,2,maf)
maf_snp
maf_snp  <- apply(X,2,maf)
maf_snp
hist(maf.per.snp)
X[1:5,1]
X[1:100,1]
X[1:,1]
X[,1]
dim(X)
maf <- function(x) {
y0 <-  sum(x ==0,na.rm=TRUE)
y1 <-  sum(x ==1,na.rm=TRUE)
y2 <-  sum(x ==2,na.rm=TRUE)
af1 <-(100*(min(y0,y1,y2))/length(x))
af1[af1==1] <- 0 # monomorfics
return (af1)
}
maf_snp  <- apply(X,2,maf)
hist(maf.per.snp)
maf_snp
maf_snp>0.40
sum(maf_snp>0.40)
sum(maf_snp<0.05)
cond1 = sum(maf_snp>0.40)
cond1 = sum(maf_snp>0.40)
cond2 = sum(maf_snp<0.05)
cond1 <- sum(maf_snp>0.40)
cond2 <- sum(maf_snp<0.05)
X[,1]
X[,4]
X[,6]
X[,17]
X[,14]
cond2
cond1
n <- nrow(X.Fam)
ibs.mean <- function(x,y) {
y <- mean(2 - abs(x - y),na.rm=TRUE)
return(y)
}
ibs.sd <- function(x,y) {
y <- sd(abs(x-y),na.rm=TRUE)
return(y)
}
n <- nrow(X.Fam)
Dmean <- matrix(NA,nrow=n,ncol=n)
Dsd <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
Dmean[i,j] <- ibs.mean(snps.maf.lar.4[i,],snps.maf.lar.4[j,])
Dsd[i,j] <- ibs.sd(snps.maf.lar.4[i,],snps.maf.lar.4[j,])
}
}
snps_maf4 <- snps[,which(maf_snp > 0.4)]
ibs.mean <- function(x,y) {
y <- mean(2 - abs(x - y),na.rm=TRUE)
return(y)
}
ibs.sd <- function(x,y) {
y <- sd(abs(x-y),na.rm=TRUE)
return(y)
}
n <- nrow(X.Fam)
Dmean <- matrix(NA,nrow=n,ncol=n)
Dsd <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
Dmean[i,j] <- ibs.mean(snps.maf.lar.4[i,],snps.maf.lar.4[j,])
Dsd[i,j] <- ibs.sd(snps.maf.lar.4[i,],snps.maf.lar.4[j,])
}
}
for(i in 1:n) {
for(j in 1:n) {
Dmean[i,j] <- ibs.mean(snps_maf4[i,],snps_maf4[j,])
Dsd[i,j] <- ibs.sd(snps_maf4[i,],snps_maf4[j,])
}
}
Relationship <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
Relationship[i,j] <- is.po(X.Fam[i,],X.Fam[j,])
}
}
ibs.m <- Dmean[lower.tri(Dmean)]
ibs.s <- Dsd[lower.tri(Dsd)]
is.po <- function(ind1, ind2) {
# ind1 child of ind2
ind1.child.ind2 <- ind1[1]==ind2[1] & (ind1[3]==ind2[2] | ind1[4]==ind2[2])
ind1.parent.ind2 <- ind1[1]==ind2[1] & (ind1[2]==ind2[3] | ind1[2]==ind2[4]) # x     parent of y
rel <- ind1.child.ind2 | ind1.parent.ind2
return(rel)
}
Relationship <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
Relationship[i,j] <- is.po(X.Fam[i,],X.Fam[j,])
}
}
rel.ind <- Relationship[lower.tri(Relationship)]
cols.rel.ind <- rep('black', length(rel.ind))
cols.rel.ind[rel.ind] <- 'red'
plot(ibs.m, ibs.s, xlim=c(1,2), ylim=c(0,1),
main = 'SNPs with MAF >= 0.4',col = cols.rel.ind,
xlab="Mean", ylab="Standard deviation")
ibs.all2 <- matrix(NA,nrow=n,ncol=n)
ibs.all0 <- matrix(NA,nrow=n,ncol=n)
s.0 <- function(x,y) {
return(sum(x==0 & y==0,na.rm=TRUE))
}
s.1 <- function(x,y) {
return(sum(x==1 & y==1,na.rm=TRUE))
}
s.2 <- function(x,y) {
return(sum(x==2 & y==2,na.rm=TRUE))
}
s0 <- matrix(NA,nrow=n,ncol=n)
s1 <- matrix(NA,nrow=n,ncol=n)
s2 <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
s0[i,j] <- s.0(Y.Geno[,i],Y.Geno[,j])
s1[i,j] <- s.1(Y.Geno[,i],Y.Geno[,j])
s2[i,j] <- s.2(Y.Geno[,i],Y.Geno[,j])
}
}
s.0 <- function(x,y) {
return(sum(x==0 & y==0,na.rm=TRUE))
}
s.1 <- function(x,y) {
return(sum(x==1 & y==1,na.rm=TRUE))
}
s.2 <- function(x,y) {
return(sum(x==2 & y==2,na.rm=TRUE))
}
s0 <- matrix(NA,nrow=n,ncol=n)
s1 <- matrix(NA,nrow=n,ncol=n)
s2 <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
s0[i,j] <- s.0(snps_maf4[,i],snps_maf4[,j])
s1[i,j] <- s.1(snps_maf4[,i],snps_maf4[,j])
s2[i,j] <- s.2(snps_maf4[,i],snps_maf4[,j])
}
}
ibs.m <- s0[lower.tri(s0)]
ibs.s <- s2[lower.tri(s2)]
plot(ibs.m,ibs.s,xlab="Fraccion of loci with 0 IBS alleles shared (p0)",ylab="Fraccion of loci with 2 IBS alleles shared (p2)",
col=colvec)
plot(ibs.m,ibs.s,xlab="Fraccion of loci with 0 IBS alleles shared (p0)",ylab="Fraccion of loci with 2 IBS alleles shared (p2)")
```
cols.rel.ind
colvec
sa0 <- function(x,y) {
return(sum(x==0 & y==0,na.rm=TRUE))
}
sa2 <- function(x,y) {
return(sum(x==2 & y==2,na.rm=TRUE))
}
ibs_all2 <- matrix(NA,nrow=n,ncol=n)
ibs_all0 <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
ibs_all0[i,j] <- sa0(snps_maf4[,i],snps_maf4[,j])
ibs_all2[i,j] <- sa2(snps_maf4[,i],snps_maf4[,j])
}
}
ibs_all2 <- ibs_all2[lower.tri(ibs.all2)]
ibs_all0 <- ibs_all0[lower.tri(ibs.all0)]
plot(ibs_all0, ibs_all2, xlim=c(0,0.2), ylim=c(0.4,0.8),
main = 'SNPs with MAF >= 0.4',col = cols.rel.ind,
xlab="Fraction of loci sharing 0 alleles",
ylab="Fraction of loci sharing 2 alleles")
```
ibs_all2 <- ibs_all2[lower.tri(ibs.all2)]
ibs_all0 <- ibs_all0[lower.tri(ibs.all0)]
plot(ibs_all0, ibs_all2, xlim=c(0,0.2), ylim=c(0.4,0.8),
main = 'SNPs with MAF >= 0.4',
xlab="Fraction of loci sharing 0 alleles",
ylab="Fraction of loci sharing 2 alleles")
ibs_all2
ibs_all0
sa0[1:5,1:5]
sa0[1:5,1:5]
sa2[1:5,1:5]
s.0 <- function(x,y) {
return(sum(x==0 & y==0,na.rm=TRUE))
}
s.1 <- function(x,y) {
return(sum(x==1 & y==1,na.rm=TRUE))
}
s.2 <- function(x,y) {
return(sum(x==2 & y==2,na.rm=TRUE))
}
s.0(Y.Geno[,1],Y.Geno[,2])
s0 <- matrix(NA,nrow=n,ncol=n)
s1 <- matrix(NA,nrow=n,ncol=n)
s2 <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
s0[i,j] <- s.0(Y.Geno[,i],Y.Geno[,j])
s1[i,j] <- s.1(Y.Geno[,i],Y.Geno[,j])
s2[i,j] <- s.2(Y.Geno[,i],Y.Geno[,j])
}
}
for(i in 1:n) {
for(j in 1:n) {
s0[i,j] <- s.0(snps_maf4[,i],snps_maf4[,j])
s1[i,j] <- s.1(snps_maf4[,i],snps_maf4[,j])
s2[i,j] <- s.2(snps_maf4[,i],snps_maf4[,j])
}
}
sa0[1:5,1:5]
sa2[1:5,1:5]
s0[1:5,1:5]
s2[1:5,1:5]
ibs.m <- s0[lower.tri(s0)]
ibs.s <- s2[lower.tri(s2)]
plot(ibs.m,ibs.s)
s.0(Y.Geno[,1],Y.Geno[,2])
ibs.all2 <- matrix(NA,nrow=n,ncol=n)
ibs.all0 <- matrix(NA,nrow=n,ncol=n)
for(i in 2:n) {
na.snp.i <- which(is.na(snps_maf4[i,]))
for(j in 1:(i-1)) {
na.snp.j <- which(is.na(snps_maf4[j,]))
list.na <- unique(c(na.snp.i, na.snp.j))
snp.i <- snps.maf.lar.4[i,-list.na]
snp.j <- snps.maf.lar.4[j, -list.na]
if (length(snp.i) == 0){
ibs.all2[i,j] <- 0
ibs.all0[i,j] <- 0
next
}
ibs.all2[i,j] <- sum(snp.i==snp.j)/length(snp.i)
ibs.all0[i,j] <- sum(sapply(1:length(snp.i), function(x){
if((snp.i[x] == 2 & snp.j[x]==0) | (snp.j[x] == 2 & snp.i[x] == 0)){
return(1)
}
else{
return(0)
}
}))/length(snp.i)
}
}
ibs.all2 <- matrix(NA,nrow=n,ncol=n)
ibs.all0 <- matrix(NA,nrow=n,ncol=n)
for(i in 2:n) {
na.snp.i <- which(is.na(snps_maf4[i,]))
for(j in 1:(i-1)) {
na.snp.j <- which(is.na(snps_maf4[j,]))
list.na <- unique(c(na.snp.i, na.snp.j))
snp.i <- snps_maf4[i,-list.na]
snp.j <- snps_maf4[j, -list.na]
if (length(snp.i) == 0){
ibs.all2[i,j] <- 0
ibs.all0[i,j] <- 0
next
}
ibs.all2[i,j] <- sum(snp.i==snp.j)/length(snp.i)
ibs.all0[i,j] <- sum(sapply(1:length(snp.i), function(x){
if((snp.i[x] == 2 & snp.j[x]==0) | (snp.j[x] == 2 & snp.i[x] == 0)){
return(1)
}
else{
return(0)
}
}))/length(snp.i)
}
}
m = maf.per.snp[maf.per.snp > 0.40]
d= names(m)
Y.Geno =X.Geno[ (rownames(X.Geno) %in% d), ]
s.0 <- function(x,y) {
return(sum(x==0 & y==0,na.rm=TRUE))
}
s.1 <- function(x,y) {
return(sum(x==1 & y==1,na.rm=TRUE))
}
s.2 <- function(x,y) {
return(sum(x==2 & y==2,na.rm=TRUE))
}
s.0(Y.Geno[,1],Y.Geno[,2])
s0 <- matrix(NA,nrow=n,ncol=n)
s1 <- matrix(NA,nrow=n,ncol=n)
s2 <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
s0[i,j] <- s.0(Y.Geno[,i],Y.Geno[,j])
s1[i,j] <- s.1(Y.Geno[,i],Y.Geno[,j])
s2[i,j] <- s.2(Y.Geno[,i],Y.Geno[,j])
}
}
s0[1:5,1:5]
s2[1:5,1:5]
ibs.m <- s0[lower.tri(s0)]
ibs.s <- s2[lower.tri(s2)]
plot(ibs.m,ibs.s,xlab="Fraccion of loci with 0 IBS alleles shared (p0)",ylab="Fraccion of loci with 2 IBS alleles shared (p2)",
plot(ibs.m,ibs.s,xlab="Fraccion of loci with 0 IBS alleles shared (p0)",ylab="Fraccion of loci with 2 IBS alleles shared (p2)")
)
m = X[,which(maf_snp > 0.4)]
d = names(m)
Y.Geno =X.Geno[ (rownames(X.Geno) %in% d), ]
s.0 <- function(x,y) {
return(sum(x==0 & y==0,na.rm=TRUE))
}
s.1 <- function(x,y) {
return(sum(x==1 & y==1,na.rm=TRUE))
}
s.2 <- function(x,y) {
return(sum(x==2 & y==2,na.rm=TRUE))
}
s.0(Y.Geno[,1],Y.Geno[,2])
s0 <- matrix(NA,nrow=n,ncol=n)
s1 <- matrix(NA,nrow=n,ncol=n)
s2 <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
s0[i,j] <- s.0(Y.Geno[,i],Y.Geno[,j])
s1[i,j] <- s.1(Y.Geno[,i],Y.Geno[,j])
s2[i,j] <- s.2(Y.Geno[,i],Y.Geno[,j])
}
}
ibs.m <- s0[lower.tri(s0)]
ibs.s <- s2[lower.tri(s2)]
plot(ibs.m,ibs.s,xlab="Fraccion of loci with 0 IBS alleles shared (p0)",ylab="Fraccion of loci with 2 IBS alleles shared (p2)")
m = maf_snp[,maf_snp > 0.4]
maf_snp
m = maf_snp[maf_snp > 0.4]
d = names(m)
Y.Geno =X.Geno[ (rownames(X.Geno) %in% d), ]
s.0 <- function(x,y) {
return(sum(x==0 & y==0,na.rm=TRUE))
}
s.1 <- function(x,y) {
return(sum(x==1 & y==1,na.rm=TRUE))
}
s.2 <- function(x,y) {
return(sum(x==2 & y==2,na.rm=TRUE))
}
s.0(Y.Geno[,1],Y.Geno[,2])
s0 <- matrix(NA,nrow=n,ncol=n)
s1 <- matrix(NA,nrow=n,ncol=n)
s2 <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n) {
for(j in 1:n) {
s0[i,j] <- s.0(Y.Geno[,i],Y.Geno[,j])
s1[i,j] <- s.1(Y.Geno[,i],Y.Geno[,j])
s2[i,j] <- s.2(Y.Geno[,i],Y.Geno[,j])
}
}
ibs.m <- s0[lower.tri(s0)]
ibs.s <- s2[lower.tri(s2)]
plot(ibs.m,ibs.s,xlab="Fraccion of loci with 0 IBS alleles shared (p0)",ylab="Fraccion of loci with 2 IBS alleles shared (p2)")
plot(ibs.m,ibs.s,xlab="Fraccion of loci with 0 IBS alleles shared (p0)",ylab="Fraccion of loci with 2 IBS alleles shared (p2)", col=cols.rel.ind)
print("P0 pairs have more loci sharing")
